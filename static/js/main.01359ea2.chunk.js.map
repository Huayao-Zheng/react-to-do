{"version":3,"sources":["context/ThemeProvider.js","context/FillLocalStorage.js","context/TodoProvider.js","components/Header/Header.js","components/TodoForm/TodoForm.js","components/TodoList/TodoItem/CompleteButton/CompleteButton.js","components/TodoList/TodoItem/DeleteButton/DeleteButton.js","components/TodoList/TodoItem/TodoContent/TodoContent.js","components/TodoList/TodoItem/TodoItem.js","components/TodoList/TodoListStatusBar/TodoListStatusBar.js","components/TodoList/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","theme","setTheme","contextValue","toggleDarkTheme","body","document","querySelector","classList","contains","remove","add","Provider","value","storeNewTodoListToLocal","newTodoList","window","localStorage","setItem","JSON","stringify","TodoContext","id","Date","getTime","TodoProvider","getItem","content","completed","parse","getTodoListFromlocalStorage","todoList","setTodoList","status","setStatus","isCompleted","find","todo","addTodoItem","deleteTodoItem","filter","completeTodoItem","map","getLengthOfTodoItems","length","getActiveTodoItems","getCompletedTodoItems","clearAllCompletedTodos","useTodoContext","useContext","Header","className","onClick","xmlns","width","height","fill","fillRule","d","TodoForm","todoItem","setTodoItem","onSubmit","e","preventDefault","placeholder","type","onChange","target","CompleteButton","stroke","strokeWidth","DeleteButton","TodoContent","TodoItem","TodoListStatus","todoListSize","TodoList","activeTodos","completedTodos","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"sVAEMA,EAAeC,0BAERC,EAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC9B,EAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAaMC,EAAe,CACnBF,QACAG,gBAbsB,WACtB,IAAMC,EAAOC,SAASC,cAAc,QAChCF,EAAKG,UAAUC,SAAS,cAC1BJ,EAAKG,UAAUE,OAAO,aACtBR,EAAS,MAETG,EAAKG,UAAUG,IAAI,aACnBT,EAAS,gBASb,OACE,cAACN,EAAagB,SAAd,CAAuBC,MAAOV,EAA9B,SACGJ,K,cCeMe,EAA0B,SAACC,GAAD,OACrCC,OAAOC,aAAaC,QAAQ,WAAYC,KAAKC,UAAUL,KCnCnDM,EAAcxB,0BAEhByB,GAAK,IAAIC,MAAOC,UAEPC,EAAe,SAAC,GAAkB,IAAhB1B,EAAe,EAAfA,SAC7B,EAAgCC,mBDXS,WACpCgB,OAAOC,aAAaS,QAAQ,aAiC/BV,OAAOC,aAAaC,QAAQ,WAAYC,KAAKC,UAhCxB,CACnB,CACEE,GAAI,EACJK,QAAS,oCACTC,WAAW,GAEb,CACEN,GAAI,EACJK,QAAS,yBACTC,WAAW,GAEb,CACEN,GAAI,EACJK,QAAS,wBACTC,WAAW,GAEb,CACEN,GAAI,EACJK,QAAS,kBACTC,WAAW,GAEb,CACEN,GAAI,EACJK,QAAS,oBACTC,WAAW,GAEb,CACEN,GAAI,EACJK,QAAS,uCACTC,WAAW,MAMjB,OAAOT,KAAKU,MAAMb,OAAOC,aAAaS,QAAQ,aC1BLI,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4BhC,mBAAS,IAArC,mBAAOiC,EAAP,KAAeC,EAAf,KA2CM/B,EAAe,CACnB4B,WACAE,SACAC,YACAC,YAjBkB,SAACb,GAAD,OAClBS,EAASK,MAAK,SAACC,GAAD,OAAUA,EAAKf,KAAOA,IAAyB,IAAnBe,EAAKT,cAiB/CU,YA9CkB,SAACX,GACnB,IAAMZ,EAAW,sBAAOgB,GAAP,CAAiB,CAAET,KAAIK,UAASC,WAAW,KAC5DI,EAAYjB,GACZD,EAAwBC,GACxBO,KA2CAiB,eAxCqB,SAACjB,GACtB,IAAMP,EAAcgB,EAASS,QAAO,SAACH,GAAD,OAAUA,EAAKf,KAAOA,KAC1DU,EAAYjB,GACZD,EAAwBC,IAsCxB0B,iBAnCuB,SAACnB,GACxB,IAAMP,EAAcgB,EAASW,KAAI,SAACL,GAChC,OAAIA,EAAKf,KAAOA,IAAyB,IAAnBe,EAAKT,UAClB,2BAAKS,GAAZ,IAAkBT,WAAW,IACpBS,EAAKf,KAAOA,IAAyB,IAAnBe,EAAKT,UACzB,2BAAKS,GAAZ,IAAkBT,WAAW,IAEtBS,KAIXL,EAAYjB,GACZD,EAAwBC,IAwBxB4B,qBAlB2B,kBAAMZ,EAASa,QAmB1CC,mBAlByB,kBAAMd,EAASS,QAAO,SAACH,GAAD,OAAWA,EAAKT,cAmB/DkB,sBAlB4B,kBAAMf,EAASS,QAAO,SAACH,GAAD,OAAUA,EAAKT,cAmBjEmB,uBAjB6B,WAC7B,IAAMhC,EAAcgB,EAASS,QAAO,SAACH,GAAD,OAA6B,IAAnBA,EAAKT,aACnDI,EAAYjB,GACZD,EAAwBC,KAiB1B,OACE,cAACM,EAAYT,SAAb,CAAsBC,MAAOV,EAA7B,SAA4CJ,KAInCiD,EAAiB,kBAAMC,qBAAW5B,IC/BhC6B,G,MAvCA,WACb,MHyBmCD,qBAAWrD,GGzBtCK,EAAR,EAAQA,MAAOG,EAAf,EAAeA,gBAEf,OACE,mCACE,sCACW,cAAVH,EACC,qBACEkD,UAAU,MACVC,QAAShD,EACTiD,MAAM,6BACNC,MAAM,KACNC,OAAO,KALT,SAOE,sBACEC,KAAK,OACLC,SAAS,UACTC,EAAE,qhBAIN,qBACEP,UAAU,OACVC,QAAShD,EACTiD,MAAM,6BACNC,MAAM,KACNC,OAAO,KALT,SAOE,sBACEC,KAAK,OACLC,SAAS,UACTC,EAAE,6LCLCC,G,MA1BE,WACf,IAAQrB,EAAgBU,IAAhBV,YACR,EAAgCtC,mBAAS,IAAzC,mBAAO4D,EAAP,KAAiBC,EAAjB,KAWA,OACE,uBAAMC,SAVe,SAACC,GACtBA,EAAEC,iBAEEJ,EAAShB,OAAS,IACpBN,EAAYsB,GACZC,EAAY,MAKd,UACE,sBAAMV,UAAU,eAChB,uBACEc,YAAY,uBACZC,KAAK,OACLrD,MAAO+C,EACPO,SAAU,SAACJ,GAAD,OAAOF,EAAYE,EAAEK,OAAOvD,eCQ/BwD,G,MA7BQ,SAAC,GAAY,IAAV/C,EAAS,EAATA,GACxB,EAA0C0B,IAAlCb,EAAR,EAAQA,YAAaM,EAArB,EAAqBA,iBAErB,OACE,wBACEW,QAAS,WACPX,EAAiBnB,IAEnB6B,UAAS,6BAAwBhB,EAAYb,GAAM,YAAc,MAJnE,SAME,qBAAK6B,UAAS,wBAAmBhB,EAAYb,GAAM,YAAc,MAAjE,SACE,qBACE6B,UAAS,UAAKhB,EAAYb,GAAM,UAAY,MAC5C+B,MAAM,6BACNC,MAAM,KACNC,OAAO,IAJT,SAME,sBACEC,KAAK,OACLc,OAAO,OACPC,YAAY,IACZb,EAAE,iCCACc,G,MApBM,SAAC,GAAY,IAAVlD,EAAS,EAATA,GACdiB,EAAmBS,IAAnBT,eAER,OACE,qBACEY,UAAU,mBACVC,QAAS,kBAAMb,EAAejB,IAC9B+B,MAAM,6BACNC,MAAM,KACNC,OAAO,KALT,SAOE,sBACEC,KAAK,UACLC,SAAS,UACTC,EAAE,wICJKe,G,MAVK,SAAC,GAAqB,IAAnBnD,EAAkB,EAAlBA,GAAIK,EAAc,EAAdA,QACjBQ,EAAgBa,IAAhBb,YAER,OACE,qBAAKgB,UAAS,wBAAmBhB,EAAYb,GAAM,YAAc,MAAjE,SACGK,MCOQ+C,G,MAVE,SAAC,GAAqB,IAAnBpD,EAAkB,EAAlBA,GAAIK,EAAc,EAAdA,QACtB,OACE,qBAAIwB,UAAU,OAAd,UACE,cAAC,EAAD,CAAgB7B,GAAIA,IACpB,cAAC,EAAD,CAAaA,GAAIA,EAAIK,QAASA,IAC9B,cAAC,EAAD,CAAcL,GAAIA,SCqCTqD,G,YA5CQ,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACxB,EAAsD5B,IAA9Cf,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAAWa,EAA3B,EAA2BA,uBAE3B,OACE,sBAAKI,UAAU,SAAf,UACE,sBAAKA,UAAU,qBAAf,UAAqCyB,EAArC,iBAEA,sBAAKzB,UAAU,cAAf,UACE,wBACEC,QAAS,kBAAMlB,EAAU,KACzBiB,UAAS,kCACI,KAAXlB,EAAgB,aAAe,MAHnC,iBAQA,wBACEmB,QAAS,kBAAMlB,EAAU,WACzBiB,UAAS,qCACI,WAAXlB,EAAsB,aAAe,MAHzC,oBAQA,wBACEmB,QAAS,kBAAMlB,EAAU,cACzBiB,UAAS,wCACI,cAAXlB,EAAyB,aAAe,MAH5C,0BAUF,wBACEmB,QAASL,EACTI,UAAU,sCAFZ,kCCUS0B,EA1CE,WACf,MACE7B,IADMf,EAAR,EAAQA,OAAQF,EAAhB,EAAgBA,SAAUc,EAA1B,EAA0BA,mBAAoBC,EAA9C,EAA8CA,sBAExCgC,EAAcjC,IACdkC,EAAiBjC,IAEvB,MAAe,WAAXb,EAEA,qCACE,oBAAIkB,UAAU,QAAd,SACG2B,EAAYpC,KAAI,gBAAGpB,EAAH,EAAGA,GAAIK,EAAP,EAAOA,QAAP,OACf,cAAC,EAAD,CAAmBA,QAASA,EAASL,GAAIA,GAA1BA,QAGnB,cAAC,EAAD,CAAmBsD,aAAcE,EAAYlC,YAG7B,cAAXX,EAEP,qCACE,oBAAIkB,UAAU,QAAd,SACG4B,EAAerC,KAAI,gBAAGpB,EAAH,EAAGA,GAAIK,EAAP,EAAOA,QAAP,OAClB,cAAC,EAAD,CAAmBA,QAASA,EAASL,GAAIA,GAA1BA,QAGnB,cAAC,EAAD,CAAmBsD,aAAcG,EAAenC,YAMpD,qCACE,oBAAIO,UAAU,QAAd,SACGpB,EAASW,KAAI,gBAAGpB,EAAH,EAAGA,GAAIK,EAAP,EAAOA,QAAP,OACZ,cAAC,EAAD,CAAmBA,QAASA,EAASL,GAAIA,GAA1BA,QAGnB,cAAC,EAAD,CAAmBsD,aAAc7C,EAASa,aCpBjCoC,EAfH,WACV,OACE,iCACE,cAAC,EAAD,UACE,cAAC,EAAD,MAGF,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,WCLOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OAAO,cAAC,EAAD,IAASrF,SAASsF,eAAe,SAKjDX,M","file":"static/js/main.01359ea2.chunk.js","sourcesContent":["import { createContext, useContext, useState } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [theme, setTheme] = useState(null);\r\n\r\n  const toggleDarkTheme = () => {\r\n    const body = document.querySelector('body');\r\n    if (body.classList.contains('darkTheme')) {\r\n      body.classList.remove('darkTheme');\r\n      setTheme('');\r\n    } else {\r\n      body.classList.add('darkTheme');\r\n      setTheme('darkTheme');\r\n    }\r\n  };\r\n\r\n  const contextValue = {\r\n    theme,\r\n    toggleDarkTheme,\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={contextValue}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useThemeContext = () => useContext(ThemeContext);\r\n","export const getTodoListFromlocalStorage = () => {\r\n  if (!window.localStorage.getItem('todoList')) {\r\n    const defaultValue = [\r\n      {\r\n        id: 1,\r\n        content: 'Complete online JavaScript course',\r\n        completed: false,\r\n      },\r\n      {\r\n        id: 2,\r\n        content: 'Jog around the park 3x',\r\n        completed: false,\r\n      },\r\n      {\r\n        id: 3,\r\n        content: '10 minutes meditation',\r\n        completed: false,\r\n      },\r\n      {\r\n        id: 4,\r\n        content: 'Read for 1 hour',\r\n        completed: false,\r\n      },\r\n      {\r\n        id: 5,\r\n        content: 'Pick up groceries',\r\n        completed: false,\r\n      },\r\n      {\r\n        id: 6,\r\n        content: 'Complete Todo App on Frontend Mentor',\r\n        completed: true,\r\n      },\r\n    ];\r\n    window.localStorage.setItem('todoList', JSON.stringify(defaultValue));\r\n  }\r\n\r\n  return JSON.parse(window.localStorage.getItem('todoList'));\r\n};\r\n\r\nexport const storeNewTodoListToLocal = (newTodoList) =>\r\n  window.localStorage.setItem('todoList', JSON.stringify(newTodoList));\r\n","import { createContext, useContext, useState } from 'react';\r\nimport {\r\n  getTodoListFromlocalStorage,\r\n  storeNewTodoListToLocal,\r\n} from './FillLocalStorage';\r\n\r\nconst TodoContext = createContext();\r\n\r\nlet id = new Date().getTime();\r\n\r\nexport const TodoProvider = ({ children }) => {\r\n  const [todoList, setTodoList] = useState(getTodoListFromlocalStorage());\r\n  const [status, setStatus] = useState(''); // '' or 'active' or 'completed'\r\n\r\n  const addTodoItem = (content) => {\r\n    const newTodoList = [...todoList, { id, content, completed: false }];\r\n    setTodoList(newTodoList);\r\n    storeNewTodoListToLocal(newTodoList);\r\n    id++;\r\n  };\r\n\r\n  const deleteTodoItem = (id) => {\r\n    const newTodoList = todoList.filter((todo) => todo.id !== id);\r\n    setTodoList(newTodoList);\r\n    storeNewTodoListToLocal(newTodoList);\r\n  };\r\n\r\n  const completeTodoItem = (id) => {\r\n    const newTodoList = todoList.map((todo) => {\r\n      if (todo.id === id && todo.completed === false) {\r\n        return { ...todo, completed: true };\r\n      } else if (todo.id === id && todo.completed === true) {\r\n        return { ...todo, completed: false };\r\n      } else {\r\n        return todo;\r\n      }\r\n    });\r\n\r\n    setTodoList(newTodoList);\r\n    storeNewTodoListToLocal(newTodoList);\r\n  };\r\n\r\n  const isCompleted = (id) =>\r\n    todoList.find((todo) => todo.id === id && todo.completed === true);\r\n\r\n  const getLengthOfTodoItems = () => todoList.length;\r\n  const getActiveTodoItems = () => todoList.filter((todo) => !todo.completed);\r\n  const getCompletedTodoItems = () => todoList.filter((todo) => todo.completed);\r\n\r\n  const clearAllCompletedTodos = () => {\r\n    const newTodoList = todoList.filter((todo) => todo.completed === false);\r\n    setTodoList(newTodoList);\r\n    storeNewTodoListToLocal(newTodoList);\r\n  };\r\n\r\n  const contextValue = {\r\n    todoList,\r\n    status,\r\n    setStatus,\r\n    isCompleted,\r\n    addTodoItem,\r\n    deleteTodoItem,\r\n    completeTodoItem,\r\n    getLengthOfTodoItems,\r\n    getActiveTodoItems,\r\n    getCompletedTodoItems,\r\n    clearAllCompletedTodos,\r\n  };\r\n\r\n  return (\r\n    <TodoContext.Provider value={contextValue}>{children}</TodoContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTodoContext = () => useContext(TodoContext);\r\n","import React from 'react';\r\nimport { useThemeContext } from '../../context/ThemeProvider';\r\nimport './Header.scss';\r\n\r\nconst Header = () => {\r\n  const { theme, toggleDarkTheme } = useThemeContext();\r\n\r\n  return (\r\n    <header>\r\n      <h1>TODO</h1>\r\n      {theme === 'darkTheme' ? (\r\n        <svg\r\n          className=\"sun\"\r\n          onClick={toggleDarkTheme}\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"26\"\r\n          height=\"26\"\r\n        >\r\n          <path\r\n            fill=\"#FFF\"\r\n            fillRule=\"evenodd\"\r\n            d=\"M13 21a1 1 0 011 1v3a1 1 0 11-2 0v-3a1 1 0 011-1zm-5.657-2.343a1 1 0 010 1.414l-2.121 2.121a1 1 0 01-1.414-1.414l2.12-2.121a1 1 0 011.415 0zm12.728 0l2.121 2.121a1 1 0 01-1.414 1.414l-2.121-2.12a1 1 0 011.414-1.415zM13 8a5 5 0 110 10 5 5 0 010-10zm12 4a1 1 0 110 2h-3a1 1 0 110-2h3zM4 12a1 1 0 110 2H1a1 1 0 110-2h3zm18.192-8.192a1 1 0 010 1.414l-2.12 2.121a1 1 0 01-1.415-1.414l2.121-2.121a1 1 0 011.414 0zm-16.97 0l2.121 2.12A1 1 0 015.93 7.344L3.808 5.222a1 1 0 011.414-1.414zM13 0a1 1 0 011 1v3a1 1 0 11-2 0V1a1 1 0 011-1z\"\r\n          />\r\n        </svg>\r\n      ) : (\r\n        <svg\r\n          className=\"moon\"\r\n          onClick={toggleDarkTheme}\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"26\"\r\n          height=\"26\"\r\n        >\r\n          <path\r\n            fill=\"#FFF\"\r\n            fillRule=\"evenodd\"\r\n            d=\"M13 0c.81 0 1.603.074 2.373.216C10.593 1.199 7 5.43 7 10.5 7 16.299 11.701 21 17.5 21c2.996 0 5.7-1.255 7.613-3.268C23.22 22.572 18.51 26 13 26 5.82 26 0 20.18 0 13S5.82 0 13 0z\"\r\n          />\r\n        </svg>\r\n      )}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { useTodoContext } from '../../context/TodoProvider';\r\nimport './TodoForm.scss';\r\n\r\nconst TodoForm = () => {\r\n  const { addTodoItem } = useTodoContext();\r\n  const [todoItem, setTodoItem] = useState('');\r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (todoItem.length > 0) {\r\n      addTodoItem(todoItem);\r\n      setTodoItem('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleOnSubmit}>\r\n      <span className=\"circle-box\" />\r\n      <input\r\n        placeholder=\"Create a new todo...\"\r\n        type=\"text\"\r\n        value={todoItem}\r\n        onChange={(e) => setTodoItem(e.target.value)}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n","import { useTodoContext } from '../../../../context/TodoProvider';\r\nimport './CompleteButton.scss';\r\n\r\nconst CompleteButton = ({ id }) => {\r\n  const { isCompleted, completeTodoItem } = useTodoContext();\r\n\r\n  return (\r\n    <button\r\n      onClick={() => {\r\n        completeTodoItem(id);\r\n      }}\r\n      className={`todo__complete-btn ${isCompleted(id) ? 'completed' : null}`}\r\n    >\r\n      <div className={`btn-bg-filler ${isCompleted(id) ? 'completed' : null}`}>\r\n        <svg\r\n          className={`${isCompleted(id) ? 'showSVG' : null}`}\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"11\"\r\n          height=\"9\"\r\n        >\r\n          <path\r\n            fill=\"none\"\r\n            stroke=\"#FFF\"\r\n            strokeWidth=\"2\"\r\n            d=\"M1 4.304L3.696 7l6-6\"\r\n          />\r\n        </svg>\r\n      </div>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default CompleteButton;\r\n","import React from 'react';\r\nimport { useTodoContext } from '../../../../context/TodoProvider';\r\nimport './DeleteButton.scss';\r\n\r\nconst DeleteButton = ({ id }) => {\r\n  const { deleteTodoItem } = useTodoContext();\r\n\r\n  return (\r\n    <svg\r\n      className=\"todo__delete-btn\"\r\n      onClick={() => deleteTodoItem(id)}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"18\"\r\n      height=\"18\"\r\n    >\r\n      <path\r\n        fill=\"#494C6B\"\r\n        fillRule=\"evenodd\"\r\n        d=\"M16.97 0l.708.707L9.546 8.84l8.132 8.132-.707.707-8.132-8.132-8.132 8.132L0 16.97l8.132-8.132L0 .707.707 0 8.84 8.132 16.971 0z\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default DeleteButton;\r\n","import React from 'react';\r\nimport { useTodoContext } from '../../../../context/TodoProvider';\r\nimport './TodoContent.scss';\r\n\r\nconst TodoContent = ({ id, content }) => {\r\n  const { isCompleted } = useTodoContext();\r\n\r\n  return (\r\n    <div className={`todo__content ${isCompleted(id) ? 'cross-out' : null}`}>\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoContent;\r\n","import React from 'react';\r\nimport CompleteButton from './CompleteButton/CompleteButton';\r\nimport DeleteButton from './DeleteButton/DeleteButton';\r\nimport TodoContent from './TodoContent/TodoContent';\r\nimport './TodoItem.scss';\r\n\r\nconst TodoItem = ({ id, content }) => {\r\n  return (\r\n    <li className=\"todo\">\r\n      <CompleteButton id={id} />\r\n      <TodoContent id={id} content={content} />\r\n      <DeleteButton id={id} />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from 'react';\r\nimport { useTodoContext } from '../../../context/TodoProvider';\r\nimport './TodoListStatusBar.scss';\r\n\r\nconst TodoListStatus = ({ todoListSize }) => {\r\n  const { status, setStatus, clearAllCompletedTodos } = useTodoContext();\r\n\r\n  return (\r\n    <div className=\"status\">\r\n      <div className=\"status__items-left\">{todoListSize} items left</div>\r\n\r\n      <div className=\"aac-wrapper\">\r\n        <button\r\n          onClick={() => setStatus('')}\r\n          className={`status-btns status__all ${\r\n            status === '' ? 'hightLight' : null\r\n          }`}\r\n        >\r\n          All\r\n        </button>\r\n        <button\r\n          onClick={() => setStatus('active')}\r\n          className={`status-btns status__active ${\r\n            status === 'active' ? 'hightLight' : null\r\n          }`}\r\n        >\r\n          Active\r\n        </button>\r\n        <button\r\n          onClick={() => setStatus('completed')}\r\n          className={`status-btns status__completed ${\r\n            status === 'completed' ? 'hightLight' : null\r\n          }`}\r\n        >\r\n          Completed\r\n        </button>\r\n      </div>\r\n\r\n      <button\r\n        onClick={clearAllCompletedTodos}\r\n        className=\"status-btns status__clear-completed\"\r\n      >\r\n        Clear Completed\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoListStatus;\r\n","import React from 'react';\r\nimport { useTodoContext } from '../../context/TodoProvider';\r\nimport TodoItem from './TodoItem/TodoItem';\r\nimport './TodoList.scss';\r\nimport TodoListStatusBar from './TodoListStatusBar/TodoListStatusBar';\r\n\r\nconst TodoList = () => {\r\n  const { status, todoList, getActiveTodoItems, getCompletedTodoItems } =\r\n    useTodoContext();\r\n  const activeTodos = getActiveTodoItems();\r\n  const completedTodos = getCompletedTodoItems();\r\n\r\n  if (status === 'active') {\r\n    return (\r\n      <>\r\n        <ul className=\"todos\">\r\n          {activeTodos.map(({ id, content }) => (\r\n            <TodoItem key={id} content={content} id={id} />\r\n          ))}\r\n        </ul>\r\n        <TodoListStatusBar todoListSize={activeTodos.length} />\r\n      </>\r\n    );\r\n  } else if (status === 'completed') {\r\n    return (\r\n      <>\r\n        <ul className=\"todos\">\r\n          {completedTodos.map(({ id, content }) => (\r\n            <TodoItem key={id} content={content} id={id} />\r\n          ))}\r\n        </ul>\r\n        <TodoListStatusBar todoListSize={completedTodos.length} />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"todos\">\r\n        {todoList.map(({ id, content }) => (\r\n          <TodoItem key={id} content={content} id={id} />\r\n        ))}\r\n      </ul>\r\n      <TodoListStatusBar todoListSize={todoList.length} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport { ThemeProvider } from './context/ThemeProvider';\r\nimport { TodoProvider } from './context/TodoProvider';\r\nimport Header from './components/Header/Header';\r\nimport TodoForm from './components/TodoForm/TodoForm';\r\nimport TodoList from './components/TodoList/TodoList';\r\n\r\nconst App = () => {\r\n  return (\r\n    <main>\r\n      <ThemeProvider>\r\n        <Header />\r\n      </ThemeProvider>\r\n\r\n      <TodoProvider>\r\n        <TodoForm />\r\n        <TodoList />\r\n      </TodoProvider>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}